services:
  # MongoDB Database
  mongodb:
    image: mongo:5.0
    container_name: todo-mongodb
    ports:
      - "${MONGO_PORT:-27017}:${MONGO_PORT:-27017}"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-example}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-todo_app}
    volumes:
      - mongodb_data:/data/db
    networks:
      - todo_network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Task Service
  task-service:
    build:
      context: .
      dockerfile: task-service/Dockerfile
    container_name: todo-task-service
    ports:
      - "${TASK_SERVICE_PORT:-50051}:${TASK_SERVICE_PORT:-50051}"
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://root:${MONGO_INITDB_ROOT_PASSWORD:-example}@mongodb:${MONGO_PORT:-27017}/todo_app?authSource=admin}
      - PORT=${TASK_SERVICE_PORT:-50051}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - todo_network

  # User Service
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    container_name: todo-user-service
    ports:
      - "${USER_SERVICE_PORT:-50052}:${USER_SERVICE_PORT:-50052}"
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://root:${MONGO_INITDB_ROOT_PASSWORD:-example}@mongodb:${MONGO_PORT:-27017}/todo_app?authSource=admin}
      - PORT=${USER_SERVICE_PORT:-50052}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - todo_network

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: notification-service/Dockerfile
    container_name: todo-notification-service
    ports:
      - "${NOTIFICATION_SERVICE_PORT:-50053}:${NOTIFICATION_SERVICE_PORT:-50053}"
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://root:${MONGO_INITDB_ROOT_PASSWORD:-example}@mongodb:${MONGO_PORT:-27017}/todo_app?authSource=admin}
      - PORT=${NOTIFICATION_SERVICE_PORT:-50053}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - todo_network

  # Analytics Service
  analytics-service:
    build:
      context: .
      dockerfile: analytics-service/Dockerfile
    container_name: todo-analytics-service
    ports:
      - "${ANALYTICS_SERVICE_PORT:-50054}:${ANALYTICS_SERVICE_PORT:-50054}"
    environment:
      - MONGO_URI=${MONGO_URI:-mongodb://root:${MONGO_INITDB_ROOT_PASSWORD:-example}@mongodb:${MONGO_PORT:-27017}/todo_app?authSource=admin}
      - PORT=${ANALYTICS_SERVICE_PORT:-50054}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - todo_network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: todo-api-gateway
    ports:
      - "${API_GATEWAY_PORT:-8080}:${API_GATEWAY_PORT:-8080}"
    environment:
      - PORT=${API_GATEWAY_PORT:-8080}
      - TASK_SERVICE_ADDR=${TASK_SERVICE_ADDR:-task-service:${TASK_SERVICE_PORT:-50051}}
      - USER_SERVICE_ADDR=${USER_SERVICE_ADDR:-user-service:${USER_SERVICE_PORT:-50052}}
      - NOTIFICATION_SERVICE_ADDR=${NOTIFICATION_SERVICE_ADDR:-notification-service:${NOTIFICATION_SERVICE_PORT:-50053}}
      - ANALYTICS_SERVICE_ADDR=${ANALYTICS_SERVICE_ADDR:-analytics-service:${ANALYTICS_SERVICE_PORT:-50054}}
    depends_on:
      - task-service
      - user-service
      - notification-service
      - analytics-service
    networks:
      - todo_network

networks:
  todo_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
