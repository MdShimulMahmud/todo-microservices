# Task Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-service
  namespace: todo-app
  labels:
    app: task-service
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: task-service
  template:
    metadata:
      labels:
        app: task-service
        component: backend
        version: v1
      annotations:
        # Prometheus metrics scraping
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - node1
                - node2
      tolerations:
      - key: "app"
        operator: "Equal"
        value: "todo"
        effect: "NoSchedule"
      containers:
      - name: task-service
        image: shimulmahmud/task-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 50051
          name: grpc
        resources:
          requests:
            cpu: 150m
            memory: 192Mi
          limits:
            cpu: 400m
            memory: 384Mi
        env:
        # Application config
        - name: MONGO_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGO_HOST
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        - name: MONGO_URI
          value: "mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}/todo_app?authSource=admin"
        - name: PORT
          value: "50051"
        
        # Logging configuration
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        
        # OpenTelemetry/Tracing configuration
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://tempo-distributor.logging:4317"
        - name: OTEL_SERVICE_NAME
          value: "task-service"
        - name: OTEL_TRACES_SAMPLER
          value: "parentbased_traceidratio"
        - name: OTEL_TRACES_SAMPLER_ARG
          value: "0.5"  # Sample 50% of traces
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.namespace=todo-app,service.version=v1,service.instance.id=$(POD_NAME)"
        
        # Prometheus metrics
        - name: METRICS_ENABLED
          value: "true"
        - name: METRICS_PORT
          value: "9090"
        
        # Pod metadata for correlation
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
        - name: app-storage
          mountPath: /data
        
        livenessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
        
        readinessProbe:
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:50051"]
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 3
      
      - name: envoy
        image: envoyproxy/envoy:v1.22.0
        imagePullPolicy: Always
        ports:
        - containerPort: 9901
          name: admin
        - containerPort: 8080
          name: http
        - containerPort: 9102
          name: metrics
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        env:
        - name: ENVOY_LOG_LEVEL
          value: "info"
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
      
      volumes:
      - name: config-volume
        emptyDir: {}
      - name: envoy-config
        configMap:
          name: envoy-config
      - name: app-storage
        persistentVolumeClaim:
          claimName: app-storage-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: task-service
  namespace: todo-app
  labels:
    app: task-service
spec:
  selector:
    app: task-service
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  - name: http
    port: 8080
    targetPort: 8080
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

