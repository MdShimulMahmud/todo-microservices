# Analytics Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: analytics-service
  namespace: todo-app
  labels:
    app: analytics-service
    component: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: analytics-service
  template:
    metadata:
      labels:
        app: analytics-service
        component: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080" # Pointing scrape to Envoy
        prometheus.io/path: "/metrics"
    spec:
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      
      # Using the more flexible nodeAffinity to schedule on worker nodes
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role
                operator: In
                values:
                - worker
      
      # --- FIX #2: REMOVED a problematic toleration. ---
      # The nodeAffinity above correctly handles scheduling, so this is not needed
      # unless you have a specific taint on your worker nodes.

      containers:
      - name: analytics-service
        image: shimulmahmud/analytics-service:latest
        imagePullPolicy: Always
        
        # --- FIX #1: REMOVED the incompatible command block. ---
        # Your distroless image does not have a shell ("/bin/sh").
        # The Go application must build the connection string internally.

        ports:
        - containerPort: 50054
          name: grpc
        - containerPort: 9090
          name: metrics
        env:
        # Your Go app will read these three variables directly
        - name: MONGO_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGO_HOST
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: username
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: password
        - name: PORT
          value: "50054"
        - name: LOG_LEVEL
          value: "info"
        - name: LOG_FORMAT
          value: "json"
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://tempo-distributor.logging:4317"
        - name: OTEL_SERVICE_NAME
          value: "analytics-service"
        - name: OTEL_TRACES_SAMPLER
          value: "parentbased_traceidratio"
        - name: OTEL_TRACES_SAMPLER_ARG
          value: "0.5"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.namespace=todo-app,service.version=v1,service.instance.id=$(POD_NAME)"
        - name: METRICS_ENABLED
          value: "true"
        - name: METRICS_PORT
          value: "9090"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
            
      - name: envoy
        image: envoyproxy/envoy:v1.22.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9901
          name: admin
        - containerPort: 8080
          name: http
        - containerPort: 9102
          name: envoy-metrics
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: envoy-config
          mountPath: /etc/envoy
          
      volumes:
      - name: envoy-config
        configMap:
          name: envoy-config
      - name: app-storage
        persistentVolumeClaim:
          claimName: app-storage-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: analytics-service
  namespace: todo-app
  labels:
    app: analytics-service
spec:
  selector:
    app: analytics-service
  ports:
  - name: grpc
    port: 50054
    targetPort: 50054
  - name: metrics
    port: 9090
    targetPort: 9090
  type: ClusterIP

